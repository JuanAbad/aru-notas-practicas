<!DOCTYPE html>
<html lang="en">
<head>
<!-- 2022-01-26 Wed 20:15 -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>ENDE - Notas</title>
<meta name="generator" content="Org mode">
<link rel="stylesheet" type="text/css" href="../../css/index.css" />
<script type="text/javascript">
// @license magnet:?xt=urn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&dn=public-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target = document.getElementById(id);
       if(null != target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id="content">
<header>
<h1 class="title">ENDE - Notas</h1>
</header><nav id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#org209d315">1. TEMA 1</a>
<ul>
<li><a href="#org2f8f533">1.1. Conceptos de software, programa y aplicacion.</a>
<ul>
<li><a href="#orgd7119c8">1.1.1. Software</a>
<ul>
<li><a href="#orgf48c32a">1.1.1.1. Categorias</a>
<ul>
<li><a href="#org78a679d">1.1.1.1.1. Segun el tipo de tarea que realiza</a>
<ul>
<li><a href="#orgc5f04df">1.1.1.1.1.1. De sistema</a></li>
<li><a href="#org3d15e5e">1.1.1.1.1.2. De aplicacion</a></li>
<li><a href="#org5246a66">1.1.1.1.1.3. De programacion o Desarrollo</a></li>
</ul>
</li>
<li><a href="#org2b30488">1.1.1.1.2. Segun el metodo de distribucion</a>
<ul>
<li><a href="#orgb6a4e2a">1.1.1.1.2.1. Shareware</a></li>
<li><a href="#org8cb5e0b">1.1.1.1.2.2. Freeware</a></li>
<li><a href="#orgc99a5db">1.1.1.1.2.3. Adware</a></li>
<li><a href="#orgb2fb0b7">1.1.1.1.2.4. Multimedia</a></li>
<li><a href="#org5a695dd">1.1.1.1.2.5. De uso especifico</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org3de30d8">1.1.1.2. Licencias</a>
<ul>
<li><a href="#orgc4d6ddb">1.1.1.2.1. SW Libre</a></li>
<li><a href="#org0eb56ce">1.1.1.2.2. SW Propietario</a></li>
<li><a href="#org37c8e5a">1.1.1.2.3. SW de dominio publico</a></li>
<li><a href="#orgc0c46ff">1.1.1.2.4. GPL</a></li>
</ul>
</li>
<li><a href="#org057ef3f">1.1.1.3. Tipos</a>
<ul>
<li><a href="#org76304c5">1.1.1.3.1. A medida</a></li>
<li><a href="#orgb091413">1.1.1.3.2. Estandar o Enlatados</a></li>
</ul>
</li>
<li><a href="#org9ab38f9">1.1.1.4. Ciclos de vida</a>
<ul>
<li><a href="#org878ba41">1.1.1.4.1. Cascada</a></li>
<li><a href="#orgf52fe5c">1.1.1.4.2. Evolutivos</a>
<ul>
<li><a href="#orgb9697ed">1.1.1.4.2.1. Iterativo incremental</a></li>
<li><a href="#org4891682">1.1.1.4.2.2. En espiral</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#orgaf55d56">1.1.2. Programa</a></li>
<li><a href="#org2fda1f7">1.1.3. Aplicacion</a></li>
<li><a href="#org3a933b1">1.1.4. Suite o Paquete Integrado</a></li>
</ul>
</li>
<li><a href="#org13bca14">1.2. Lenguajes de programacion</a>
<ul>
<li><a href="#org6345210">1.2.1. Componentes</a></li>
<li><a href="#org047cfb1">1.2.2. Criterios para establecer las clasificaciones</a>
<ul>
<li><a href="#orgece5bc9">1.2.2.1. Segun el nivel de abstraccion</a>
<ul>
<li><a href="#org865bbe8">1.2.2.1.1. Lenguaje de bajo nivel</a></li>
<li><a href="#org2621e29">1.2.2.1.2. Lenguaje de Medio Nivel o Ensamblador</a></li>
<li><a href="#orgb19aab2">1.2.2.1.3. Lenguaje de Alto Nivel</a></li>
</ul>
</li>
<li><a href="#orgf48a541">1.2.2.2. Segun la forma de ejecucion</a>
<ul>
<li><a href="#org2ce288b">1.2.2.2.1. Compilados</a></li>
<li><a href="#org57be691">1.2.2.2.2. Interpretados</a></li>
</ul>
</li>
<li><a href="#org583a5fc">1.2.2.3. Paradigma de programacion</a>
<ul>
<li><a href="#org3eff715">1.2.2.3.1. Categorias</a>
<ul>
<li><a href="#orgd7aa1ac">1.2.2.3.1.1. Imperativos</a></li>
<li><a href="#org0976902">1.2.2.3.1.2. Funcionales</a></li>
<li><a href="#orga480fe5">1.2.2.3.1.3. Logicos</a></li>
<li><a href="#org0631e9d">1.2.2.3.1.4. Estructurados</a></li>
<li><a href="#orga3df5e9">1.2.2.3.1.5. Orientados a objetos</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#org73ba152">1.2.3. Obtener codigo ejecutable</a>
<ul>
<li><a href="#orgafbd36a">1.2.3.1. Tipos de codigo</a>
<ul>
<li><a href="#org22e574c">1.2.3.1.1. Fuente</a></li>
<li><a href="#org905f9e4">1.2.3.1.2. Objeto</a></li>
<li><a href="#org6a4f29c">1.2.3.1.3. Ejecutable</a></li>
</ul>
</li>
<li><a href="#org0e63070">1.2.3.2. Compilacion</a>
<ul>
<li><a href="#orgdeab7be">1.2.3.2.1. Compilador</a></li>
<li><a href="#orgb487f7a">1.2.3.2.2. Enlazador</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#org20fcead">1.3. Maquinas Virtuales</a>
<ul>
<li><a href="#orgc942d25">1.3.1. Categorias</a>
<ul>
<li><a href="#org3be8a90">1.3.1.1. De sistema</a></li>
<li><a href="#org891cbf6">1.3.1.2. De proceso o de aplicacion</a></li>
</ul>
</li>
<li><a href="#orge174395">1.3.2. La maquina virtual de Java</a>
<ul>
<li><a href="#org5cb0d5e">1.3.2.1. Tareas o funciones</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#orge3c552d">1.4. Lenguajes mas difundidos. Caracteristicas.</a>
<ul>
<li><a href="#orga26722a">1.4.1. Java</a></li>
<li><a href="#orga12cf1c">1.4.2. Python</a></li>
<li><a href="#org5f95f2a">1.4.3. C y C++</a></li>
<li><a href="#org7e2d9f0">1.4.4. JavaScript</a></li>
<li><a href="#org77b8d5f">1.4.5. PHP</a></li>
<li><a href="#org6378a72">1.4.6. VB.NET</a></li>
</ul>
</li>
<li><a href="#orgbf575e0">1.5. Desarrollo de una aplicacion</a>
<ul>
<li><a href="#org69011dd">1.5.1. Fases</a>
<ul>
<li><a href="#orgd93d6ea">1.5.1.1. Inicial</a></li>
<li><a href="#org2971968">1.5.1.2. Analisis</a>
<ul>
<li><a href="#org80449bc">1.5.1.2.1. Tecnicas utilizadas</a></li>
<li><a href="#org95c7b9f">1.5.1.2.2. Tipos de requisitos</a></li>
<li><a href="#orge8d323b">1.5.1.2.3. Representacion de requisitos</a>
<ul>
<li><a href="#orgab95f9c">1.5.1.2.3.1. DFD (Diagrama De Flujo de Datos)</a></li>
<li><a href="#orga6c3901">1.5.1.2.3.2. DFC (Diagrama de Flujo de Control)</a></li>
<li><a href="#org7fd5de8">1.5.1.2.3.3. DTE (Diagrama de Transicion de Estados)</a></li>
<li><a href="#org0c4386b">1.5.1.2.3.4. DER (Diagrama Entidad Relacion)</a></li>
<li><a href="#org2d9bdc1">1.5.1.2.3.5. DD (Diccionario de Datos)</a></li>
<li><a href="#org3c43af2">1.5.1.2.3.6. Documento Generado</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#org143781b">1.5.1.3. Diseño</a>
<ul>
<li><a href="#org81d7311">1.5.1.3.1. Estructurado: flujo de datos sobre el sistema.</a>
<ul>
<li><a href="#org4c5de5a">1.5.1.3.1.1. Diseño de datos</a></li>
<li><a href="#org5745505">1.5.1.3.1.2. Diseño arquitectonico</a></li>
<li><a href="#orgf0949ca">1.5.1.3.1.3. Diseño de la interfaz</a></li>
<li><a href="#orgb5fc559">1.5.1.3.1.4. Diseño a nivel de componentes</a></li>
</ul>
</li>
<li><a href="#org47c56b4">1.5.1.3.2. O.O.: objetos, propiedades, comportamiento, eventos, estado.</a></li>
</ul>
</li>
<li><a href="#org947dbdb">1.5.1.4. Codificacion o Implementacion</a></li>
<li><a href="#org6c6a30f">1.5.1.5. Pruebas</a></li>
<li><a href="#orgf276e44">1.5.1.6. Explotacion</a></li>
<li><a href="#org362a881">1.5.1.7. Mantenimiento</a></li>
<li><a href="#orgab5fd29">1.5.1.8. Documentacion</a></li>
</ul>
</li>
<li><a href="#orge120b43">1.5.2. Roles en el desarrollo de software</a>
<ul>
<li><a href="#orgcf69324">1.5.2.1. Arquitecto del SW</a></li>
<li><a href="#org83a9be3">1.5.2.2. Jefe de Proyecto</a></li>
<li><a href="#org9c2fd29">1.5.2.3. Analista del sistema</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#org2e8c57e">2. TEMA 2</a></li>
</ul>
</div>
</nav>

<div id="outline-container-org209d315" class="outline-2">
<h2 id="org209d315"><span class="section-number-2">1</span> TEMA 1</h2>
<div class="outline-text-2" id="text-1">
</div>
<div id="outline-container-org2f8f533" class="outline-3">
<h3 id="org2f8f533"><span class="section-number-3">1.1</span> Conceptos de software, programa y aplicacion.</h3>
<div class="outline-text-3" id="text-1-1">
</div>
<div id="outline-container-orgd7119c8" class="outline-4">
<h4 id="orgd7119c8"><span class="section-number-4">1.1.1</span> Software</h4>
<div class="outline-text-4" id="text-1-1-1">
<ul class="org-ul">
<li>Tambien denominado componente logico.</li>
<li>Es intangible, a diferencia del hardware que es tangible.</li>
<li>Realiza una tarea determinada.</li>
<li>Se comunica con el hardware para llevar a cabo su tarea.</li>
<li>Se desarrolla, no se fabrica.</li>
<li>Incluye los datos utilizados por los programas.</li>
<li>Puede ser a medida o enlatado.</li>
</ul>
</div>

<div id="outline-container-orgf48c32a" class="outline-5">
<h5 id="orgf48c32a"><span class="section-number-5">1.1.1.1</span> Categorias</h5>
<div class="outline-text-5" id="text-1-1-1-1">
</div>
<div id="outline-container-org78a679d" class="outline-6">
<h6 id="org78a679d"><span class="section-number-6">1.1.1.1.1</span> Segun el tipo de tarea que realiza</h6>
<div class="outline-text-6" id="text-1-1-1-1-1">
</div>
<div id="outline-container-orgc5f04df" class="outline-7">
<h7 id="orgc5f04df"><span class="section-number-7">1.1.1.1.1.1</span> De sistema</h7>
<div class="outline-text-7" id="text-1-1-1-1-1-1">
<ul class="org-ul">
<li>Hace que funcione el HW.</li>
<li>Administra los recursos HW.</li>
<li>Intermediario: Humano - HW.</li>
<li>Ejemplo: SS. OO., Controladores (driver)</li>
</ul>
</div>
</div>

<div id="outline-container-org3d15e5e" class="outline-7">
<h7 id="org3d15e5e"><span class="section-number-7">1.1.1.1.1.2</span> De aplicacion</h7>
<div class="outline-text-7" id="text-1-1-1-1-1-2">
<ul class="org-ul">
<li>Nos ayudan a realizar tareas especificas -&gt; automatizan.</li>
<li>Ejemplo: CAD, SW medico, contabilidad, ofimatica, &#x2026;</li>
</ul>
</div>
</div>

<div id="outline-container-org5246a66" class="outline-7">
<h7 id="org5246a66"><span class="section-number-7">1.1.1.1.1.3</span> De programacion o Desarrollo</h7>
<div class="outline-text-7" id="text-1-1-1-1-1-3">
<ul class="org-ul">
<li>Proporciona herramientas al progamador.</li>
<li>Suelen contar con un IDE (Entornos de Desarrollo Integrados).</li>
<li>Ejemplos: Eclipse.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org2b30488" class="outline-6">
<h6 id="org2b30488"><span class="section-number-6">1.1.1.1.2</span> Segun el metodo de distribucion</h6>
<div class="outline-text-6" id="text-1-1-1-1-2">
</div>
<div id="outline-container-orgb6a4e2a" class="outline-7">
<h7 id="orgb6a4e2a"><span class="section-number-7">1.1.1.1.2.1</span> Shareware</h7>
<div class="outline-text-7" id="text-1-1-1-1-2-1">
<ul class="org-ul">
<li>El usuario evalua el producto el producto por tiempo determinado.</li>
<li>Adquirir su licencia -&gt; $ | Precio cero</li>
<li>Ejemplo: Winrar</li>
</ul>
</div>
</div>

<div id="outline-container-org8cb5e0b" class="outline-7">
<h7 id="org8cb5e0b"><span class="section-number-7">1.1.1.1.2.2</span> Freeware</h7>
<div class="outline-text-7" id="text-1-1-1-1-2-2">
<ul class="org-ul">
<li>Se distribuye sin $.</li>
<li>Incluye una licencia:</li>
<li>Permite su redistrubacion.</li>
<li>Restricciones: vender, modificar.</li>
<li>No es software de libre distribucion.</li>
</ul>
</div>
</div>

<div id="outline-container-orgc99a5db" class="outline-7">
<h7 id="orgc99a5db"><span class="section-number-7">1.1.1.1.2.3</span> Adware</h7>
<div class="outline-text-7" id="text-1-1-1-1-2-3">
<ul class="org-ul">
<li>Shareware + se descarga automaticamente + publicidad.</li>
<li>Al comprar la licencia -&gt; desaparece la publicidad.</li>
</ul>
</div>
</div>

<div id="outline-container-orgb2fb0b7" class="outline-7">
<h7 id="orgb2fb0b7"><span class="section-number-7">1.1.1.1.2.4</span> Multimedia</h7>
<div class="outline-text-7" id="text-1-1-1-1-2-4">
<ul class="org-ul">
<li>Integra textos, graficos, sonidos, animaciones.</li>
<li>En distintos ambitos como el educativo.</li>
</ul>
</div>
</div>

<div id="outline-container-org5a695dd" class="outline-7">
<h7 id="org5a695dd"><span class="section-number-7">1.1.1.1.2.5</span> De uso especifico</h7>
<div class="outline-text-7" id="text-1-1-1-1-2-5">
<ul class="org-ul">
<li>Resuelven un problema concreto.</li>
<li>Ejemplo: bancos, educacion, &#x2026;</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-org3de30d8" class="outline-5">
<h5 id="org3de30d8"><span class="section-number-5">1.1.1.2</span> Licencias</h5>
<div class="outline-text-5" id="text-1-1-1-2">
<ul class="org-ul">
<li>Licencia = contrato (desarrollador del SW, usuario).</li>
</ul>
</div>

<div id="outline-container-orgc4d6ddb" class="outline-6">
<h6 id="orgc4d6ddb"><span class="section-number-6">1.1.1.2.1</span> SW Libre</h6>
<div class="outline-text-6" id="text-1-1-1-2-1">
<ul class="org-ul">
<li>Utilizado con cualquier fin.</li>
<li>Podemos estudiar su funcionamiento y modificarlo.</li>
<li>Distribuir copias.</li>
<li>Mejoras -&gt; hacerlas publicas -&gt; distribuir al publico.</li>
</ul>
</div>
</div>

<div id="outline-container-org0eb56ce" class="outline-6">
<h6 id="org0eb56ce"><span class="section-number-6">1.1.1.2.2</span> SW Propietario</h6>
<div class="outline-text-6" id="text-1-1-1-2-2">
<ul class="org-ul">
<li>El codigo fuente no es accesible.</li>
<li>Su licencia prohibe 1 o varias posibilidades:
<ul class="org-ul">
<li>Redistribucion.</li>
<li>Copia.</li>
<li>Uso en varias maquinas.</li>
<li>Transferencias de titularidad.</li>
<li>Difusion de fallos y errores.</li>
<li>Variantes: Freeware y Shareware.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org37c8e5a" class="outline-6">
<h6 id="org37c8e5a"><span class="section-number-6">1.1.1.2.3</span> SW de dominio publico</h6>
<div class="outline-text-6" id="text-1-1-1-2-3">
<ul class="org-ul">
<li>So desconoce su autor o fin de la propiedad de autor.</li>
</ul>
</div>
</div>

<div id="outline-container-orgc0c46ff" class="outline-6">
<h6 id="orgc0c46ff"><span class="section-number-6">1.1.1.2.4</span> GPL</h6>
<div class="outline-text-6" id="text-1-1-1-2-4">
<ul class="org-ul">
<li>Licencia mas utilizada.</li>
<li>SW Libre + fuente abierta.</li>
<li>Derecho a: usar, modificar haciendo publicas.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org057ef3f" class="outline-5">
<h5 id="org057ef3f"><span class="section-number-5">1.1.1.3</span> Tipos</h5>
<div class="outline-text-5" id="text-1-1-1-3">
</div>
<div id="outline-container-org76304c5" class="outline-6">
<h6 id="org76304c5"><span class="section-number-6">1.1.1.3.1</span> A medida</h6>
<div class="outline-text-6" id="text-1-1-1-3-1">
<ul class="org-ul">
<li>Adaptado a los requeremientos de la empresa u organizacion.</li>
<li>Se desarrollo en funcion de las necesidades, actividad y
forma de trabajar.</li>
<li>No suele ser compatible con empresas del sector.</li>
<li>Es mas costoso, ya que va dirigido a un solo cliente.</li>
<li>Necesito tiempo de desarrollo.</li>
</ul>
</div>
</div>

<div id="outline-container-orgb091413" class="outline-6">
<h6 id="orgb091413"><span class="section-number-6">1.1.1.3.2</span> Estandar o Enlatados</h6>
<div class="outline-text-6" id="text-1-1-1-3-2">
<ul class="org-ul">
<li>Es software generico.</li>
<li>Resuelve multiples necesidades.</li>
<li>Puede parametrizarse o adaptarse a las necesiades -&gt;
herramientas de configuracion.</li>
<li>Pueden faltarse funciones -&gt; se complementa con otras
herramientas.</li>
<li>Ya esta hecho.</li>
<li>Menor numero de errores -&gt; comprobado por varios clientes.</li>
<li>Suele ser mas barato.</li>
<li>Pueden tener funciones que no usamos.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org9ab38f9" class="outline-5">
<h5 id="org9ab38f9"><span class="section-number-5">1.1.1.4</span> Ciclos de vida</h5>
<div class="outline-text-5" id="text-1-1-1-4">
<ul class="org-ul">
<li>Son las fases o etapas en las que se desarrolla el software.</li>
</ul>
</div>

<div id="outline-container-org878ba41" class="outline-6">
<h6 id="org878ba41"><span class="section-number-6">1.1.1.4.1</span> Cascada</h6>
<div class="outline-text-6" id="text-1-1-1-4-1">
<ul class="org-ul">
<li>Entrega el documento completo.</li>
<li>Solo en el mantenimiento se vuelve a etapas anteriores
(codificacion -&gt; pruebas).</li>
<li>Con realimentacion:
<ul class="org-ul">
<li>Cuando debido a un fallo, ambiguedades, etc &#x2026; se vuelve
a etapas anteriores.</li>
</ul></li>
<li>Ventajas, inconvenientes. Cuando se recomienda.</li>
</ul>
</div>
</div>

<div id="outline-container-orgf52fe5c" class="outline-6">
<h6 id="orgf52fe5c"><span class="section-number-6">1.1.1.4.2</span> Evolutivos</h6>
<div class="outline-text-6" id="text-1-1-1-4-2">
<ul class="org-ul">
<li>Los requisitos del usuario y del producto cambian cuando se
desarrolla.</li>
<li>Surgen versiones distintas.</li>
</ul>
</div>

<div id="outline-container-orgb9697ed" class="outline-7">
<h7 id="orgb9697ed"><span class="section-number-7">1.1.1.4.2.1</span> Iterativo incremental</h7>
<div class="outline-text-7" id="text-1-1-1-4-2-1">
<ul class="org-ul">
<li>Basado en cascada.</li>
<li>El SW se entrega en partes pequeñas -&gt; incrementos.</li>
<li>Los incrementos son reutilizables.</li>
<li>Ej: procesador de textos.
<ul class="org-ul">
<li>Primero se desarrollan las funciones basicas como las de
edicion.</li>
<li>En cada incremento se desarrollarian nuevas funciones como
la gramatica u ortografia.</li>
<li>En el siguiente, funciones avanzadas de paginacion.</li>
<li>&#x2026;</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org4891682" class="outline-7">
<h7 id="org4891682"><span class="section-number-7">1.1.1.4.2.2</span> En espiral</h7>
<div class="outline-text-7" id="text-1-1-1-4-2-2">
<ul class="org-ul">
<li>Mezcla el modelo en Cascada y el iterativo de construccion
de prototipos.</li>
<li>Cada ciclo -&gt; se divide en 4 fases.</li>
<li>Es similar al iterativo incremental, pero este si analiza
riesgos.</li>
<li>Fases:
<ul class="org-ul">
<li>Determinar objetivos, alternativas, restricciones, &#x2026;</li>
<li>Analisis de riesgos: identificar los riesgos, como
resolverlos, &#x2026;</li>
<li>Desarrollar y probar.</li>
<li>Planificacion: se revisa lo hecho, si se continua, se
planifican las fases del ciclo siguiente.</li>
</ul></li>
<li>Muy utilizado para sistemas orientados a objetos.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-orgaf55d56" class="outline-4">
<h4 id="orgaf55d56"><span class="section-number-4">1.1.2</span> Programa</h4>
<div class="outline-text-4" id="text-1-1-2">
<ul class="org-ul">
<li>Es una serie de ordenes o instrucciones.</li>
<li>Siguen un orden o secuencia para cumplir una finalidad determinado.</li>
<li>Ejemplo: Holamundo.c</li>
</ul>
</div>
</div>

<div id="outline-container-org2fda1f7" class="outline-4">
<h4 id="org2fda1f7"><span class="section-number-4">1.1.3</span> Aplicacion</h4>
<div class="outline-text-4" id="text-1-1-3">
<ul class="org-ul">
<li>Puede estar formada por uno o varios programas.</li>
<li>Esta en contacto con el usuario, no con el hardware.</li>
<li>Ejemplo: BB.DD., procesadores do texto, hojas de calculo, correo electronico.</li>
<li>Finalizar: automatizar o ayudar a realizar tareas.</li>
</ul>
</div>
</div>

<div id="outline-container-org3a933b1" class="outline-4">
<h4 id="org3a933b1"><span class="section-number-4">1.1.4</span> Suite o Paquete Integrado</h4>
<div class="outline-text-4" id="text-1-1-4">
<ul class="org-ul">
<li>Es el conjunto de programas que se ejecutan unos
independientes del otro.</li>
<li>Ejemplo: Microsoft Office, Libre Office, Open Office.</li>
<li>Suelen compartir elementos comunes como librerias, datos. etc.</li>
<li>Son compatibles entre ellos.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org13bca14" class="outline-3">
<h3 id="org13bca14"><span class="section-number-3">1.2</span> Lenguajes de programacion</h3>
<div class="outline-text-3" id="text-1-2">
<ul class="org-ul">
<li>Los programas son conjuntos de instrucciones que se desarrollan
utilizando un lenguaje de programacion.</li>
<li>Es legible por el usuario (programador).</li>
<li>Es ininteligible para el ordenador.</li>
<li>Necesita de un proceso de traduccion: lenguaje -&gt; hardware</li>
</ul>
</div>

<div id="outline-container-org6345210" class="outline-4">
<h4 id="org6345210"><span class="section-number-4">1.2.1</span> Componentes</h4>
<div class="outline-text-4" id="text-1-2-1">
<ul class="org-ul">
<li>Caracteres: Vocabulario o lexico -&gt; simbolos permitidos.</li>
<li>Sintaxis: Son las reglas que combinan los caracteres -&gt;
construcciones con los simbolos.</li>
<li>Semantica: son las reglas que definen los efectos de cualquier
construccion.</li>
<li>Palabras reservadas.</li>
</ul>
</div>
</div>

<div id="outline-container-org047cfb1" class="outline-4">
<h4 id="org047cfb1"><span class="section-number-4">1.2.2</span> Criterios para establecer las clasificaciones</h4>
<div class="outline-text-4" id="text-1-2-2">
</div>
<div id="outline-container-orgece5bc9" class="outline-5">
<h5 id="orgece5bc9"><span class="section-number-5">1.2.2.1</span> Segun el nivel de abstraccion</h5>
<div class="outline-text-5" id="text-1-2-2-1">
</div>
<div id="outline-container-org865bbe8" class="outline-6">
<h6 id="org865bbe8"><span class="section-number-6">1.2.2.1.1</span> Lenguaje de bajo nivel</h6>
<div class="outline-text-6" id="text-1-2-2-1-1">
<ul class="org-ul">
<li>Son instrucciones complejas e ininteligibles -&gt; secuencias
de 0's y 1's.</li>
<li>Es entendible por el ordenador (hardware).</li>
<li>Es dependiente del hardware del ordenador (procesador,
memoria, &#x2026;).</li>
<li>No son portables entre distinto hardware (clonico, Apple,
etc.).</li>
<li>Trabaja con los registros de Memoria Fisica.</li>
</ul>
</div>
</div>

<div id="outline-container-org2621e29" class="outline-6">
<h6 id="org2621e29"><span class="section-number-6">1.2.2.1.2</span> Lenguaje de Medio Nivel o Ensamblador</h6>
<div class="outline-text-6" id="text-1-2-2-1-2">
<ul class="org-ul">
<li>Esta cercano al Hardware.</li>
<li>Surge por la poce portabilidad del L. Maquina.</li>
<li>Usa mnemotecnicos -&gt; Mas legible por el usuario.</li>
<li>Se trabaja con los registros del procesador y direcciones
fisicas.</li>
<li>No es facil de programar.</li>
<li>El programador ademas de conocer el lenguaje ha de conocer
el HW.</li>
<li>Para hacerlo legible al ordenador:
<ul class="org-ul">
<li>Se compila.</li>
<li>Se traduce al lenguaje maquina.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgb19aab2" class="outline-6">
<h6 id="orgb19aab2"><span class="section-number-6">1.2.2.1.3</span> Lenguaje de Alto Nivel</h6>
<div class="outline-text-6" id="text-1-2-2-1-3">
<ul class="org-ul">
<li>Son la mayoria de los lenguajes actuales.</li>
<li>Mas cercano al lenguaje humano, son mas intuitivos.</li>
<li>Se ayudan de librerias y funciones.</li>
<li>Para ejecutarse necesitan de un traductor (interprete o
compilador).</li>
<li>Son independientes de la maquina.</li>
<li>Ejemplo: C++, Cobol, PHP, Java, &#x2026;</li>
<li>Pueden ofrecer un framework (entorno de trabajo o
desarrollo):
<ul class="org-ul">
<li>La programacion es mas eficiente y rapida.</li>
<li>Formado por un conjunto de elementos personalizables y
adaptables a las necesidades de la aplicacion.</li>
<li>Ejemplo: bootstrap.
<ul class="org-ul">
<li>Utilizado en twitter.</li>
<li>Cualquiera puede realizar paginas y aplicaciones web.</li>
</ul></li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orgf48a541" class="outline-5">
<h5 id="orgf48a541"><span class="section-number-5">1.2.2.2</span> Segun la forma de ejecucion</h5>
<div class="outline-text-5" id="text-1-2-2-2">
</div>
<div id="outline-container-org2ce288b" class="outline-6">
<h6 id="org2ce288b"><span class="section-number-6">1.2.2.2.1</span> Compilados</h6>
<div class="outline-text-6" id="text-1-2-2-2-1">
<ul class="org-ul">
<li>Necesitan de un traductor o compilador.</li>
<li>Convierten de codigo fuente a codigo maquina.</li>
<li>Mas rapidos que los interpretes o virtuales.</li>
<li>Si se producen errores hay que modificar y volver a compilar.</li>
<li>Utilizando un enlazador o linker:
<ul class="org-ul">
<li>Union (codigo objeto programa; codigo objeto de las
librerias).</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org57be691" class="outline-6">
<h6 id="org57be691"><span class="section-number-6">1.2.2.2.2</span> Interpretados</h6>
<div class="outline-text-6" id="text-1-2-2-2-2">
<ul class="org-ul">
<li>Se carga en Memoria el interprete.</li>
<li>Lee las instrucciones + las interpreta + las ejecuta.</li>
<li>Es mas lento.</li>
<li>No requiere volver a compilar ante un error.</li>
<li>Ejemplo: Java -&gt; combina compilacion e interpretacion</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org583a5fc" class="outline-5">
<h5 id="org583a5fc"><span class="section-number-5">1.2.2.3</span> Paradigma de programacion</h5>
<div class="outline-text-5" id="text-1-2-2-3">
<ul class="org-ul">
<li>Paradigma = enfoque particular para construir el SW -&gt; reglas,</li>
</ul>
<p>
patrones, estilos de programacion, &#x2026;
</p>
<ul class="org-ul">
<li>Un lenguaje de programacion puede usar mas de un paradigma -&gt;</li>
</ul>
<p>
se usa el que interesa.
</p>
</div>

<div id="outline-container-org3eff715" class="outline-6">
<h6 id="org3eff715"><span class="section-number-6">1.2.2.3.1</span> Categorias</h6>
<div class="outline-text-6" id="text-1-2-2-3-1">
</div>
<div id="outline-container-orgd7aa1ac" class="outline-7">
<h7 id="orgd7aa1ac"><span class="section-number-7">1.2.2.3.1.1</span> Imperativos</h7>
<div class="outline-text-7" id="text-1-2-2-3-1-1">
<ul class="org-ul">
<li>Instrucciones simples.</li>
<li>Detallan como se manipula la informacion de la memoria.</li>
<li>Sentencia principal -&gt; la asignacion.</li>
<li>Ejemplo: Basic, Java, Fortran, C++.</li>
<li>Engloba: programacion estructurada, modular y la POO.</li>
</ul>
</div>
</div>

<div id="outline-container-org0976902" class="outline-7">
<h7 id="org0976902"><span class="section-number-7">1.2.2.3.1.2</span> Funcionales</h7>
<div class="outline-text-7" id="text-1-2-2-3-1-2">
<ul class="org-ul">
<li>Se basan en el concepto de funcion y los argumentos a
aplicar.</li>
<li>Ejemplo: Lisp, Schema, ML.</li>
</ul>
</div>
</div>

<div id="outline-container-orga480fe5" class="outline-7">
<h7 id="orga480fe5"><span class="section-number-7">1.2.2.3.1.3</span> Logicos</h7>
<div class="outline-text-7" id="text-1-2-2-3-1-3">
<ul class="org-ul">
<li>Los podemos ver como una BB.DD. de declaraciones logicas
-&gt; reglas.</li>
<li>Ejecucion: consiste en preguntar (BB.DD.) de forma
interactiva.</li>
<li>Ej: Prolog -&gt; sistemas expertos, prospecciones.</li>
</ul>
</div>
</div>

<div id="outline-container-org0631e9d" class="outline-7">
<h7 id="org0631e9d"><span class="section-number-7">1.2.2.3.1.4</span> Estructurados</h7>
<div class="outline-text-7" id="text-1-2-2-3-1-4">
<ul class="org-ul">
<li>Utilizan 3 construcciones logicas -&gt; secuencial,
condicional y repetitiva.</li>
<li>De lectura y seguimiento facil.</li>
<li>Si es grande su lectura y manejo se complica.</li>
<li>Se puede dividir en partes manejables o modulos (con sus
inputs y outputs).
<ul class="org-ul">
<li>Son independientes.</li>
<li>Hay uno raiz que controla al resto.</li>
<li>Permite un desarrollo mas rapido.</li>
<li>Es reutilizable.</li>
<li>Ej. Pascal, Fortran, C, Modula-2.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orga3df5e9" class="outline-7">
<h7 id="orga3df5e9"><span class="section-number-7">1.2.2.3.1.5</span> Orientados a objetos</h7>
<div class="outline-text-7" id="text-1-2-2-3-1-5">
<ul class="org-ul">
<li>Un programa es visto como un conjunto de objetos.</li>
<li>Objeto:
<ul class="org-ul">
<li>Es una estructura de datos + metodo u operaciones
(comportamiento) que los manipulan.</li>
<li>Los datos son propiedades o atributos de los objetos.</li>
<li>Los metodos son propiedades o atributos.</li>
<li>La comunicacion se lleva a cabo mediante paso de mensajes.</li>
</ul></li>
<li>Clase:
<ul class="org-ul">
<li>Es una plantilla para crear objetos -&gt; instaciacion.</li>
<li>Ejemplo: Java</li>
<li>Se asemeja a un modulo (programacion estructurada).</li>
</ul></li>
<li>Permite reutilizar codigo, trabajar en equipo y
mantenimiento del software.</li>
<li>Su programacion no es tan intuitiva.</li>
<li>Ej.: C++, Java, Smaltalk.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org73ba152" class="outline-4">
<h4 id="org73ba152"><span class="section-number-4">1.2.3</span> Obtener codigo ejecutable</h4>
<div class="outline-text-4" id="text-1-2-3">
<ul class="org-ul">
<li>Diseño:
<ul class="org-ul">
<li>Componente SW &lt;-&gt; nivel de detalle.</li>
<li>Herramientas: {Pseudocodigo | DFD}</li>
<li>Se codifica con un lenguaje de programacion.</li>
</ul></li>
<li>Codificacion: se genera el codigo fuente.</li>
</ul>
</div>

<div id="outline-container-orgafbd36a" class="outline-5">
<h5 id="orgafbd36a"><span class="section-number-5">1.2.3.1</span> Tipos de codigo</h5>
<div class="outline-text-5" id="text-1-2-3-1">
</div>
<div id="outline-container-org22e574c" class="outline-6">
<h6 id="org22e574c"><span class="section-number-6">1.2.3.1.1</span> Fuente</h6>
<div class="outline-text-6" id="text-1-2-3-1-1">
<ul class="org-ul">
<li>Escrito por el programador.</li>
<li>En lenguaje de alto nivel.</li>
<li>Mediante editor de texto o herramienta de programacion.</li>
<li>Se parte de lo pseudocodigos o DFD.</li>
<li>No se ejecute por el ordenador.</li>
</ul>
</div>
</div>

<div id="outline-container-org905f9e4" class="outline-6">
<h6 id="org905f9e4"><span class="section-number-6">1.2.3.1.2</span> Objeto</h6>
<div class="outline-text-6" id="text-1-2-3-1-2">
<ul class="org-ul">
<li>Resultado de compilar el codigo fuente.</li>
<li>No se ejecuta en el ordenador.</li>
<li>Ininteligible por el humano.</li>
<li>Representacion a bajo nivel.</li>
</ul>
</div>
</div>

<div id="outline-container-org6a4f29c" class="outline-6">
<h6 id="org6a4f29c"><span class="section-number-6">1.2.3.1.3</span> Ejecutable</h6>
<div class="outline-text-6" id="text-1-2-3-1-3">
<ul class="org-ul">
<li>Resultado de enlazar: codigo objeto + rutinas + librerias.</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org0e63070" class="outline-5">
<h5 id="org0e63070"><span class="section-number-5">1.2.3.2</span> Compilacion</h5>
<div class="outline-text-5" id="text-1-2-3-2">
</div>
<div id="outline-container-orgdeab7be" class="outline-6">
<h6 id="orgdeab7be"><span class="section-number-6">1.2.3.2.1</span> Compilador</h6>
<div class="outline-text-6" id="text-1-2-3-2-1">
<ul class="org-ul">
<li>Si existe un error en la compilacion -&gt; no se genera el
codigo objeto -&gt; modificar el codigo fuente + compilar.</li>
<li>Etapas:
<ul class="org-ul">
<li>Analisis lexico.</li>
<li>Analisis sintactico.</li>
<li>Analisis semantico.</li>
<li>Genera codigo intermedio.</li>
<li>Optimizar codigo.</li>
<li>Generar codigo.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgb487f7a" class="outline-6">
<h6 id="orgb487f7a"><span class="section-number-6">1.2.3.2.2</span> Enlazador</h6>
<div class="outline-text-6" id="text-1-2-3-2-2">
<ul class="org-ul">
<li>Inserta en el codigo objeto las funciones de las librerias.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org20fcead" class="outline-3">
<h3 id="org20fcead"><span class="section-number-3">1.3</span> Maquinas Virtuales</h3>
<div class="outline-text-3" id="text-1-3">
<ul class="org-ul">
<li>El codigo es un codigo intermedio -&gt; bytecode.</li>
<li>Son mas portables -&gt; sirven para distintas plataformas (Windows,
Linux, Apple, &#x2026;).</li>
<li>El codigo es interpretado por una maquina virtual.</li>
<li>Su ejecucion es lenta.</li>
<li>Son muy versatiles.</li>
<li>Aplicacion SW de un equipo que ejecuta programas como si fuese una
maquina real.</li>
</ul>
</div>

<div id="outline-container-orgc942d25" class="outline-4">
<h4 id="orgc942d25"><span class="section-number-4">1.3.1</span> Categorias</h4>
<div class="outline-text-4" id="text-1-3-1">
</div>
<div id="outline-container-org3be8a90" class="outline-5">
<h5 id="org3be8a90"><span class="section-number-5">1.3.1.1</span> De sistema</h5>
<div class="outline-text-5" id="text-1-3-1-1">
<ul class="org-ul">
<li>Ejecuta en la misma fisica distintas maquinas virtuales con
distintos sistemas operativos.</li>
<li>Ej: VMWare, VBox</li>
</ul>
</div>
</div>

<div id="outline-container-org891cbf6" class="outline-5">
<h5 id="org891cbf6"><span class="section-number-5">1.3.1.2</span> De proceso o de aplicacion</h5>
<div class="outline-text-5" id="text-1-3-1-2">
<ul class="org-ul">
<li>La VM se ejecuta como un proceso en el SS.OO.</li>
<li>Objetivo: proporcionar un entorno de ejecucion con
independiencia del HW y el OS.</li>
<li>Permite que un programa se ejecute de distinta manera en
distinta plataforma.</li>
<li>Ejemplo: VM Java</li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orge174395" class="outline-4">
<h4 id="orge174395"><span class="section-number-4">1.3.2</span> La maquina virtual de Java</h4>
<div class="outline-text-4" id="text-1-3-2">
<ul class="org-ul">
<li>Programa compilador Java -&gt; se ejecuta en distintos entornos.</li>
<li>El codigo generado por el compilador -&gt; lo ejecuta la JVM, no el
procesador.</li>
<li>Dibujo.</li>
</ul>
</div>

<div id="outline-container-org5cb0d5e" class="outline-5">
<h5 id="org5cb0d5e"><span class="section-number-5">1.3.2.1</span> Tareas o funciones</h5>
<div class="outline-text-5" id="text-1-3-2-1">
<ul class="org-ul">
<li>Reservar / Liberar memoria para los objetos.</li>
<li>Comunicarse con el HW.</li>
<li>Comprobar el cumplimiento de las normas de seguridad de
aplicaciones Java.</li>
<li>Inconvenientes:
<ul class="org-ul">
<li>Ejecucion mas lenta.</li>
</ul></li>
<li>Descargar e instalar el JRE.</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-orge3c552d" class="outline-3">
<h3 id="orge3c552d"><span class="section-number-3">1.4</span> Lenguajes mas difundidos. Caracteristicas.</h3>
<div class="outline-text-3" id="text-1-4">
</div>
<div id="outline-container-orga26722a" class="outline-4">
<h4 id="orga26722a"><span class="section-number-4">1.4.1</span> Java</h4>
<div class="outline-text-4" id="text-1-4-1">
<ul class="org-ul">
<li>Evolucion de C++ -&gt; lo simplifica.</li>
<li>LOO (Lenguaje Orientado a Objetos).</li>
<li>Capaz de trabajar con redes y protocolos (IP, HTTP, FTP, &#x2026;).</li>
<li>Lenguaje Virtual Interpretado.</li>
<li>Portable.</li>
<li>Contempla aspectos de seguridad.</li>
<li>Permite ejecucion multihilo.</li>
</ul>
</div>
</div>

<div id="outline-container-orga12cf1c" class="outline-4">
<h4 id="orga12cf1c"><span class="section-number-4">1.4.2</span> Python</h4>
<div class="outline-text-4" id="text-1-4-2">
<ul class="org-ul">
<li>De alto nivel pero simple y sencillo</li>
<li>Muy portable.</li>
<li>Interpretado como Java: codigo fuente -&gt; bytecode.</li>
<li>El enlace con las librerias -&gt; Al ejecutar el bytecode.</li>
<li>LOO.</li>
<li>Incrustable en otros lenguajes como C y C++.</li>
</ul>
</div>
</div>

<div id="outline-container-org5f95f2a" class="outline-4">
<h4 id="org5f95f2a"><span class="section-number-4">1.4.3</span> C y C++</h4>
<div class="outline-text-4" id="text-1-4-3">
<ul class="org-ul">
<li>Potente, versatil y se sigue utilizando.</li>
<li>Ligado a Unix.</li>
<li>Estructurado y ligado al uso de funciones.</li>
<li>Puede incluir codigo que trabaje a bajo nivel.</li>
<li>Programas eficientes y rapidos.</li>
<li>Tamaño pequeño de los programas.</li>
<li>Portable, aunque puede necesitar modificaciones.</li>
</ul>
</div>
</div>

<div id="outline-container-org7e2d9f0" class="outline-4">
<h4 id="org7e2d9f0"><span class="section-number-4">1.4.4</span> JavaScript</h4>
<div class="outline-text-4" id="text-1-4-4">
<ul class="org-ul">
<li>En programacion web.</li>
<li>Parecido a Java, C, C++.</li>
<li>Se ejecuta en el cliente.</li>
<li>Es seguro y fiable.</li>
<li>Tiene limitaciones de seguridad.</li>
<li>Codigo visible -&gt; podemos leerlo.</li>
<li>Existen muchas librerias basadas en JavaScript como JQuery.</li>
</ul>
</div>
</div>

<div id="outline-container-org77b8d5f" class="outline-4">
<h4 id="org77b8d5f"><span class="section-number-4">1.4.5</span> PHP</h4>
<div class="outline-text-4" id="text-1-4-5">
<ul class="org-ul">
<li>Multiplataforma.</li>
<li>Para desarrollar webs dinamicas.</li>
<li>Buena integracion con MySQL.</li>
<li>Puede usar tecnicas de POO (Programacion Orientada a Objetos).</li>
<li>Interpretado en la parte del servidor.</li>
<li>En backend de CMS (Pretashop, Wordpress, &#x2026;).</li>
</ul>
</div>
</div>

<div id="outline-container-org6378a72" class="outline-4">
<h4 id="org6378a72"><span class="section-number-4">1.4.6</span> VB.NET</h4>
<div class="outline-text-4" id="text-1-4-6">
<ul class="org-ul">
<li>Evolucion de Visual Basic.</li>
<li>LOO.</li>
<li>Herramientas para programarlo.
<ul class="org-ul">
<li>Microsoft Visual Estudio.</li>
<li>Sharp Develop -&gt; Libre, menos potente.</li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orgbf575e0" class="outline-3">
<h3 id="orgbf575e0"><span class="section-number-3">1.5</span> Desarrollo de una aplicacion</h3>
<div class="outline-text-3" id="text-1-5">
<ul class="org-ul">
<li>Existen distintos paradigmas.</li>
</ul>
</div>

<div id="outline-container-org69011dd" class="outline-4">
<h4 id="org69011dd"><span class="section-number-4">1.5.1</span> Fases</h4>
<div class="outline-text-4" id="text-1-5-1">
</div>
<div id="outline-container-orgd93d6ea" class="outline-5">
<h5 id="orgd93d6ea"><span class="section-number-5">1.5.1.1</span> Inicial</h5>
<div class="outline-text-5" id="text-1-5-1-1">
<ul class="org-ul">
<li>Planificacion, Estimaciones y Rentabilidad del proyecto.</li>
<li>Simil: construccion de un edificio: licencia, coste,
trabajadores, tiempo, &#x2026;</li>
<li>Gente experimentada en:
<ul class="org-ul">
<li>Elaboracion del proyecto.</li>
<li>Plataforma de construccion.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org2971968" class="outline-5">
<h5 id="org2971968"><span class="section-number-5">1.5.1.2</span> Analisis</h5>
<div class="outline-text-5" id="text-1-5-1-2">
<ul class="org-ul">
<li>Se recopilan, examinan y formulan los requisitos del cliente.</li>
<li>Se analizan posibles restricciones.</li>
<li>Se documentan y registran las entrevistas con el cliente.</li>
<li>El cliente se compromete a no variar nada hasta la 1a release.</li>
<li>El exito del proyecto esta en funcion de comprender y entender
lo que quiere el cliente para darle una solucion lo mas
acertada posible.</li>
<li>No es facil, ya que los requisitos no quedan claros, surgen
nuevos, etc.</li>
<li>Importante: comunicacion cliente-desarrollador.</li>
</ul>
</div>

<div id="outline-container-org80449bc" class="outline-6">
<h6 id="org80449bc"><span class="section-number-6">1.5.1.2.1</span> Tecnicas utilizadas</h6>
<div class="outline-text-6" id="text-1-5-1-2-1">
<ul class="org-ul">
<li>Entrevistas.</li>
<li>Desarrollo conjunto de aplicaciones, donde cada persona
juega un rol.</li>
<li>Planificacion conjunta de requisitos.</li>
<li>Brainstorming.</li>
<li>Prototipos.</li>
<li>Casos de Uso: UML (Lenguaje Unificado de Marcas) -&gt;
escenarios, comportamientos -&gt; requisitos funcionales.</li>
</ul>
</div>
</div>

<div id="outline-container-org95c7b9f" class="outline-6">
<h6 id="org95c7b9f"><span class="section-number-6">1.5.1.2.2</span> Tipos de requisitos</h6>
<div class="outline-text-6" id="text-1-5-1-2-2">
<ul class="org-ul">
<li>Funcionales: Comportamiento del sistema ante determinados
inputs.</li>
<li><p>
No Funcionales: sobre caracteristicas del sistema:
fiabilidad, plataforma, HW, &#x2026;
</p>
<table>


<colgroup>
<col  class="org-left">

<col  class="org-left">
</colgroup>
<thead>
<tr>
<th scope="col" class="org-left">Funcionales</th>
<th scope="col" class="org-left">No Funcionales</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-left">El usuario puede agregar</td>
<td class="org-left">La aplicacion debe funcionar en</td>
</tr>

<tr>
<td class="org-left">un nuevo contacto</td>
<td class="org-left">SS.OO. Linux y Windows</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">El usuario puede ver una</td>
<td class="org-left">El tiempo de respuesta a consultas,</td>
</tr>

<tr>
<td class="org-left">lista con todos los contactos</td>
<td class="org-left">altas, bajas y modificaciones ha de</td>
</tr>

<tr>
<td class="org-left">&#xa0;</td>
<td class="org-left">ser inferior a 5 segundos</td>
</tr>
</tbody>
<tbody>
<tr>
<td class="org-left">A partir de la lista de contactos</td>
<td class="org-left">Utilizar un sistema gestor de bases</td>
</tr>

<tr>
<td class="org-left">el usuario puede acceder a un contacto</td>
<td class="org-left">de datos</td>
</tr>
</tbody>
</table></li>
</ul>
</div>
</div>

<div id="outline-container-orge8d323b" class="outline-6">
<h6 id="orge8d323b"><span class="section-number-6">1.5.1.2.3</span> Representacion de requisitos</h6>
<div class="outline-text-6" id="text-1-5-1-2-3">
</div>
<div id="outline-container-orgab95f9c" class="outline-7">
<h7 id="orgab95f9c"><span class="section-number-7">1.5.1.2.3.1</span> DFD (Diagrama De Flujo de Datos)</h7>
<div class="outline-text-7" id="text-1-5-1-2-3-1">
<ul class="org-ul">
<li>Procesos -&gt; Funciones</li>
<li>Entidades externas: no pertenecen al sistema y proporciona
datos o se reciben de el.</li>
<li>Almacenes: almacena los datos procesados.</li>
<li>Flujo de datos.</li>
</ul>
</div>
</div>

<div id="outline-container-orga6c3901" class="outline-7">
<h7 id="orga6c3901"><span class="section-number-7">1.5.1.2.3.2</span> DFC (Diagrama de Flujo de Control)</h7>
<div class="outline-text-7" id="text-1-5-1-2-3-2">
<ul class="org-ul">
<li>Muestra el flujo de control, no de Estados.</li>
</ul>
</div>
</div>

<div id="outline-container-org7fd5de8" class="outline-7">
<h7 id="org7fd5de8"><span class="section-number-7">1.5.1.2.3.3</span> DTE (Diagrama de Transicion de Estados)</h7>
<div class="outline-text-7" id="text-1-5-1-2-3-3">
<ul class="org-ul">
<li>Comportamiento del sistema en funcion de los sucesos externos.</li>
</ul>
</div>
</div>

<div id="outline-container-org0c4386b" class="outline-7">
<h7 id="org0c4386b"><span class="section-number-7">1.5.1.2.3.4</span> DER (Diagrama Entidad Relacion)</h7>
<div class="outline-text-7" id="text-1-5-1-2-3-4">
<ul class="org-ul">
<li>Representa los datos y como se relacionan entre ellos.</li>
<li>Entidades.</li>
<li>Relaciones.</li>
</ul>
</div>
</div>

<div id="outline-container-org2d9bdc1" class="outline-7">
<h7 id="org2d9bdc1"><span class="section-number-7">1.5.1.2.3.5</span> DD (Diccionario de Datos)</h7>
<div class="outline-text-7" id="text-1-5-1-2-3-5">
<ul class="org-ul">
<li>Describe detalladamente los datos (flujo, almacenes) del
DFD.</li>
</ul>
</div>
</div>

<div id="outline-container-org3c43af2" class="outline-7">
<h7 id="org3c43af2"><span class="section-number-7">1.5.1.2.3.6</span> Documento Generado</h7>
<div class="outline-text-7" id="text-1-5-1-2-3-6">
<ul class="org-ul">
<li>Especificacion de Requisiton del SW.</li>
<li>Estructura: IEEE 830.</li>
</ul>
</div>
</div>
</div>
</div>

<div id="outline-container-org143781b" class="outline-5">
<h5 id="org143781b"><span class="section-number-5">1.5.1.3</span> Diseño</h5>
<div class="outline-text-5" id="text-1-5-1-3">
<ul class="org-ul">
<li>Composicion sobre la solucion al problema.</li>
<li>Requisitos -&gt; representacion del SW.</li>
<li>Se realizan 2 documentos por los analistas, supervisado por el
jefe del proyecto.
<ul class="org-ul">
<li>Se determinan los requisitos generales de la arquitectura de
la aplicacion.</li>
<li>Se define con precision cada subconjunto de la aplcacion.</li>
</ul></li>
</ul>
</div>

<div id="outline-container-org81d7311" class="outline-6">
<h6 id="org81d7311"><span class="section-number-6">1.5.1.3.1</span> Estructurado: flujo de datos sobre el sistema.</h6>
<div class="outline-text-6" id="text-1-5-1-3-1">
</div>
<div id="outline-container-org4c5de5a" class="outline-7">
<h7 id="org4c5de5a"><span class="section-number-7">1.5.1.3.1.1</span> Diseño de datos</h7>
<div class="outline-text-7" id="text-1-5-1-3-1-1">
<ul class="org-ul">
<li>Son las estructuras de datos necesarias para implementar
el software.</li>
<li>Se basan en el diagrama E/R y la descripcion detallada
de los datos.</li>
</ul>
</div>
</div>

<div id="outline-container-org5745505" class="outline-7">
<h7 id="org5745505"><span class="section-number-7">1.5.1.3.1.2</span> Diseño arquitectonico</h7>
<div class="outline-text-7" id="text-1-5-1-3-1-2">
<ul class="org-ul">
<li>Se centra en la representacion de la estructura de los
componentes del SW, sus propiedades e interacciones.</li>
<li>Un componente del SW puede ser desde un modulo de
programa, una BB.DD., conectores que permitan la
comunicacion, etc.</li>
<li>Se parte del DFD para establecer la estructura modular
del SW a desarrollar.</li>
</ul>
</div>
</div>

<div id="outline-container-orgf0949ca" class="outline-7">
<h7 id="orgf0949ca"><span class="section-number-7">1.5.1.3.1.3</span> Diseño de la interfaz</h7>
<div class="outline-text-7" id="text-1-5-1-3-1-3">
<ul class="org-ul">
<li>Describe la comunicacion entre (SW, Personas, Otros
sistemas).</li>
<li>El resultado -&gt; Creacion de formatos de pantalla.</li>
</ul>
</div>
</div>

<div id="outline-container-orgb5fc559" class="outline-7">
<h7 id="orgb5fc559"><span class="section-number-7">1.5.1.3.1.4</span> Diseño a nivel de componentes</h7>
<div class="outline-text-7" id="text-1-5-1-3-1-4">
<ul class="org-ul">
<li>Transforma: elementos estructurales (arquitectura) en
una descripcion procedimental -&gt; diseño de componentes
SW.</li>
<li>El nivel de detalle de cada componente del software se
debe poder codificar mediante un lenguaje de
programacion.</li>
<li>Sus fundamentos se basan en distintas representaciones
graficas utilizando notaciones como:
<ul class="org-ul">
<li>Diagramas de flujo.</li>
<li>Diagramas de cajas.</li>
<li>Tablas de decision.</li>
<li>Pseudocodigo.</li>
</ul></li>
<li>Construcciones logicas para formar un programa -&gt;
programacion estructurada:
<ul class="org-ul">
<li>Secuencial</li>
<li>Condicional</li>
<li>Seleccion Multiple</li>
<li>Repetitiva</li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org47c56b4" class="outline-6">
<h6 id="org47c56b4"><span class="section-number-6">1.5.1.3.2</span> O.O.: objetos, propiedades, comportamiento, eventos, estado.</h6>
<div class="outline-text-6" id="text-1-5-1-3-2">
<ul class="org-ul">
<li>Es dificil.</li>
<li>Parte de un Analisis O.O.</li>
<li>Etapas:
<ul class="org-ul">
<li>Subsistemas que implementan las pricipales funciones del
sistema.</li>
<li>Clases y Objetos:
<ul class="org-ul">
<li>Arquitectura de objetos global.</li>
<li>Jerarquia de clases.</li>
</ul></li>
<li>Mensajes: colaboracion entre Objetos.</li>
</ul></li>
<li>UML:
<ul class="org-ul">
<li>Diagramas para expresar modelos.</li>
<li>Estandar de facto.</li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-org947dbdb" class="outline-5">
<h5 id="org947dbdb"><span class="section-number-5">1.5.1.4</span> Codificacion o Implementacion</h5>
<div class="outline-text-5" id="text-1-5-1-4">
<ul class="org-ul">
<li>Implementa el software mediante un lenguaje de programacion.</li>
<li>Documentacion detallada que contiene el codigo (E/, S/,
revision, &#x2026;)</li>
<li>Mucho codigo se suele comentar en el mismo programa.</li>
<li>Importancia:
<ul class="org-ul">
<li>Puede mantenerse por la misma u otra persona.</li>
<li>La que lo mantenga ha de saber que hace cada parte y como lo
hace.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org6c6a30f" class="outline-5">
<h5 id="org6c6a30f"><span class="section-number-5">1.5.1.5</span> Pruebas</h5>
<div class="outline-text-5" id="text-1-5-1-5">
<ul class="org-ul">
<li>Garantizan que cumple las especificaciones del cliente.</li>
<li>Los mismos programas se integran bien y esta listo para la
explotacion.</li>
<li>Documentos y pruebas (Con el cliente presente, opcional):
<ul class="org-ul">
<li>Se ve si cumple con las funciones acordadas en los
documentos.</li>
<li>Se detallan:
<ul class="org-ul">
<li>Los fallos.</li>
<li>Las modificaciones.</li>
</ul></li>
</ul></li>
<li>Estructurales:
<ul class="org-ul">
<li>Pruebas tecnicas (sin clientes).</li>
<li>Cargas reales, estres del sistema y de la aplicacion.</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-orgf276e44" class="outline-5">
<h5 id="orgf276e44"><span class="section-number-5">1.5.1.6</span> Explotacion</h5>
<div class="outline-text-5" id="text-1-5-1-6">
<ul class="org-ul">
<li>Instalacion del software en el entorno real.</li>
<li>Se trabaja con el de forma normal.</li>
<li>Fase mas larga: incidencias, nuevas necesidades, etc.</li>
<li>Documentacion:
<ul class="org-ul">
<li>Errores o fallos concretos.</li>
<li>Los analistas y programadores los revisan y solucionan.</li>
<li>Otras necesidades -&gt; en Mantenimiento</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org362a881" class="outline-5">
<h5 id="org362a881"><span class="section-number-5">1.5.1.7</span> Mantenimiento</h5>
<div class="outline-text-5" id="text-1-5-1-7">
<ul class="org-ul">
<li>Acciones:
<ul class="org-ul">
<li>Correctivas de fallos.</li>
<li>Actualizaciones -&gt; adaptarlos y evolucionarias.</li>
</ul></li>
<li>Se utiliza la documentacion tecnica.</li>
<li>Todo se documenta: que operacion, que hace, como -&gt; pruebas
distintas para el programador.</li>
<li>TODAS LAS FASES SE VAN SOLAPANDO. CUANDO FINALIZAN, SU
RESULTADO ES LA APLICACION</li>
</ul>
</div>
</div>

<div id="outline-container-orgab5fd29" class="outline-5">
<h5 id="orgab5fd29"><span class="section-number-5">1.5.1.8</span> Documentacion</h5>
<div class="outline-text-5" id="text-1-5-1-8">
<ul class="org-ul">
<li>Debe ser util y adaptada a los usuarios de dicha
documentacion. Como minimo:
<ul class="org-ul">
<li>Manual de usuario:
<ul class="org-ul">
<li>Para utilizar el programa, manejo, lo que hay que hacer,
lo que no.</li>
<li>Ayuda, explicativo.</li>
</ul></li>
<li>Manual tecnico:
<ul class="org-ul">
<li>Tecnicos que conozcan el lenguaje.</li>
<li>Para que la conozcan como los que la crearon.</li>
</ul></li>
<li>Manual de instalacion:
<ul class="org-ul">
<li>Requisitos necesarios.</li>
<li>Como se instala.</li>
<li>Como so pne en funcionamiento.</li>
</ul></li>
</ul></li>
</ul>
</div>
</div>
</div>

<div id="outline-container-orge120b43" class="outline-4">
<h4 id="orge120b43"><span class="section-number-4">1.5.2</span> Roles en el desarrollo de software</h4>
<div class="outline-text-4" id="text-1-5-2">
</div>
<div id="outline-container-orgcf69324" class="outline-5">
<h5 id="orgcf69324"><span class="section-number-5">1.5.2.1</span> Arquitecto del SW</h5>
<div class="outline-text-5" id="text-1-5-2-1">
<ul class="org-ul">
<li>Decide:
<ul class="org-ul">
<li>Como va a realizarse.</li>
<li>Como se va a cohesionar.</li>
</ul></li>
<li>Con elevado conocimiento de tecnologias, frameworks,
librerias, etc.</li>
<li>Decide la forma y recursos del proyecto.</li>
</ul>
</div>
</div>

<div id="outline-container-org83a9be3" class="outline-5">
<h5 id="org83a9be3"><span class="section-number-5">1.5.2.2</span> Jefe de Proyecto</h5>
<div class="outline-text-5" id="text-1-5-2-2">
<ul class="org-ul">
<li>Dirige el proyecto.</li>
<li>Puede ser un analista experimentado.</li>
<li>Sabiduria en gestinar:
<ul class="org-ul">
<li>Equipos.</li>
<li>Tiempos.</li>
<li>Relacion con clientes.</li>
<li>Etc</li>
</ul></li>
</ul>
</div>
</div>

<div id="outline-container-org9c2fd29" class="outline-5">
<h5 id="org9c2fd29"><span class="section-number-5">1.5.2.3</span> Analista del sistema</h5>
<div class="outline-text-5" id="text-1-5-2-3">
<ul class="org-ul">
<li>Tiene mucha experiencia.</li>
</ul>
</div>
</div>
</div>
</div>
</div>

<div id="outline-container-org2e8c57e" class="outline-2">
<h2 id="org2e8c57e"><span class="section-number-2">2</span> TEMA 2</h2>
<div class="outline-text-2" id="text-2">
<ul class="org-ul">
<li>&#x2026;</li>
</ul>
</div>
</div>
</div>
<div id="postamble" class="status">
<p class="date">Created: 2022-01-26 Wed 20:15</p>
<p class="validation"><a href="https://validator.w3.org/check?uri=referer">Validate</a></p>
</div>
</body>
</html>
